####################################################################
# Example : Snapshot  Playbook
####################################################################
- name: Snapshot Pair Module
  hosts: localhost
  gather_facts: false
  collections:
    - hitachivantara.vspone_block.vsp

  vars_files:
    - ../ansible_vault_vars/ansible_vault_gateway_var.yml
    - ../ansible_vault_vars/ansible_vault_storage_var.yml
    - vsp_uai_gateway_variables.yml

  tasks:
####################################################################
# Task 0 : Get UAI gateway token
####################################################################
    - name: Get UAI gateway token
      hv_uaig_token_fact:
        connection_info:
          address: "{{ uai_gateway_address }}"
          username: "{{ vault_gateway_username }}"
          password: "{{ vault_gateway_secret }}"
      register: result_token
      ignore_errors: True

####################################################################
# Task 1 : Create snapshot pair
####################################################################
    - name: Create snapshot pair
      hv_snapshot:
        connection_info:
          connection_type: "{{ connection_type }}"
          address: "{{ uai_gateway_address }}"
          api_token: "{{ result_token.api_token.token }}"
          subscriber_id: "{{ subscriber_id }}"
        storage_system_info:
          serial: "{{ storage_serial }}"
        state: "{{ state_present }}"
        spec:
          primary_volume_id: "{{ snapshot_pvol_1  }}"
          pool_id: "{{ snapshot_pool_id_1 }}"
          snapshot_group_name: "{{ snapshot_snapshot_group_name_1 }}"
   
      register: result

    - debug:
        var: result

####################################################################
# Task 2 : Split snapshot pair
####################################################################
    - name: Split snapshot pair 
      hv_snapshot:
        connection_info:
          connection_type: "{{ connection_type }}"
          address: "{{ uai_gateway_address }}"
          api_token: "{{ result_token.api_token.token }}"
          subscriber_id: "{{ subscriber_id }}"
        storage_system_info:
          serial: "{{ storage_serial }}"
        state: "{{ state_split }}"
        spec:
          primary_volume_id: "{{ snapshot_pvol_2 }}"
          mirror_unit_id: "{{ snapshot_mirror_unit_id_2 }}"
      register: result

    - debug:
        var: result

####################################################################
# Task 3 : Resync snapshot pair
####################################################################
    - name: Resync snapshot pair
      hv_snapshot:
        connection_info:
          connection_type: "{{ connection_type }}"
          address: "{{ uai_gateway_address }}"
          api_token: "{{ result_token.api_token.token }}"
          subscriber_id: "{{ subscriber_id }}"
        storage_system_info:
          serial: "{{ storage_serial }}"
        state: "{{ state_sync }}"
        spec:
          primary_volume_id: "{{ snapshot_pvol_3 }}"
          mirror_unit_id: "{{ snapshot_mirror_unit_id_3 }}"
      register: result

    - debug:
        var: result

####################################################################
# Task 4 : Create and Auto-Split snapshot pair
####################################################################
    - name: Create and Auto-Split snapshot pair
      hv_snapshot:
        connection_info:
          connection_type: "{{ connection_type }}"
          address: "{{ uai_gateway_address }}"
          api_token: "{{ result_token.api_token.token }}"
          subscriber_id: "{{ subscriber_id }}"
        storage_system_info:
          serial: "{{ storage_serial }}"
        state: "{{ state_split }}"
        spec:
          primary_volume_id: "{{ snapshot_pvol_4 }}"
          pool_id: "{{ snapshot_pool_id_4 }}"
          snapshot_group_name: "{{ snapshot_snapshot_group_name_4 }}"
      register: result

    - debug:
        var: result

####################################################################
# Task 5 : Restore snapshot pair
####################################################################
    - name: Restore snapshot pair
      hv_snapshot:
        connection_info:
          connection_type: "{{ connection_type }}"
          address: "{{ uai_gateway_address }}"
          api_token: "{{ result_token.api_token.token }}"
          subscriber_id: "{{ subscriber_id }}"
        storage_system_info:
          serial: "{{ storage_serial }}"
        state: "{{ state_restore }}"
        spec:
          primary_volume_id: "{{ snapshot_pvol_5 }}"
          mirror_unit_id: "{{ snapshot_mirror_unit_id_5 }}"
      register: result

    - debug:
        var: result

####################################################################
# Task 6 : Create snapshot pair using existing consistency group
####################################################################
    - name: Create snapshot pair using existing consistency group
      hv_snapshot:
        connection_info:
          connection_type: "{{ connection_type }}"
          address: "{{ uai_gateway_address }}"
          api_token: "{{ result_token.api_token.token }}"
          subscriber_id: "{{ subscriber_id }}"
        storage_system_info:
          serial: "{{ storage_serial }}"
        state: "{{ state_present }}"
        spec:
          primary_volume_id: "{{ snapshot_pvol_6 }}"
          pool_id: "{{ snapshot_pool_id_6 }}"
          snapshot_group_name: "{{ snapshot_snapshot_group_name_6 }}"
          is_data_reduction_force_copy: "{{ snapshot_is_data_reduction_force_copy_6 }}"
      register: result

    - debug:
        var: result

####################################################################
# Task 7 : Create snapshot advanced cascade pair
####################################################################  
    - name: Create snapshot advanced cascade pair
      hv_snapshot:
        connection_info:
          connection_type: "{{ connection_type }}"
          address: "{{ uai_gateway_address }}"
          api_token: "{{ result_token.api_token.token }}"
          subscriber_id: "{{ subscriber_id }}"
        storage_system_info:
          serial: "{{ storage_serial }}"
        state: "{{ state_present }}"
        spec:
          primary_volume_id: "{{ snapshot_pvol_7 }}"
          pool_id: "{{ snapshot_pool_id_7 }}"
          snapshot_group_name: "{{ snapshot_snapshot_group_name_7 }}"
          is_data_reduction_force_copy: "{{ snapshot_is_data_reduction_force_copy_7 }}"
          can_cascade: "{{ snapshot_can_cascade_7 }}"
   
      register: result

    - debug:
        var: result

####################################################################
# Task 8 : Create snapshot advanced clone pair
####################################################################  
    - name: Create snapshot advanced clone pair
      hv_snapshot:
        connection_info:
          connection_type: "{{ connection_type }}"
          address: "{{ uai_gateway_address }}"
          api_token: "{{ result_token.api_token.token }}"
          subscriber_id: "{{ subscriber_id }}"
        storage_system_info:
          serial: "{{ storage_serial }}"
        state: "{{ state_present }}"
        spec:
          primary_volume_id: "{{ snapshot_pvol_8 }}"
          pool_id: "{{ snapshot_pool_id_8 }}"
          snapshot_group_name: "{{ snapshot_snapshot_group_name_8 }}"
          is_data_reduction_force_copy: "{{ snapshot_is_data_reduction_force_copy_8 }}"
          is_clone: "{{ snapshot_is_clone_8 }}"
          can_cascade: "{{ snapshot_can_cascade_8 }}"
      register: result

    - debug:
        var: result

####################################################################
# Task 9 : Create clone volume using snapshot advanced clone pair
#################################################################### 
    - name: Create clone volume using snapshot advanced clone pair
      hv_snapshot:
        connection_info:
          connection_type: "{{ connection_type }}"
          address: "{{ uai_gateway_address }}"
          api_token: "{{ result_token.api_token.token }}"
          subscriber_id: "{{ subscriber_id }}"
        storage_system_info:
          serial: "{{ storage_serial }}"
        state: clone
        spec:
          primary_volume_id: "{{ snapshot_pvol_9 }}"
          mirror_unit_id: "{{ snapshot_mirror_unit_id_9 }}"
      register: result

    - debug:
        var: result

####################################################################
# Task 10 : Delete snapshot pair
####################################################################
    - name: Delete snapshot pair
      hv_snapshot:
        connection_info:
          connection_type: "{{ connection_type }}"
          address: "{{ uai_gateway_address }}"
          api_token: "{{ result_token.api_token.token }}"
          subscriber_id: "{{ subscriber_id }}"
        storage_system_info:
          serial: "{{ storage_serial }}"
        state: "{{ state_absent }}"
        spec:
          primary_volume_id: " {{ snapshot_pvol_10 }}"
          mirror_unit_id: "{{ snapshot_mirror_unit_id_10 }}"
      register: result

    - debug:
        var: result
