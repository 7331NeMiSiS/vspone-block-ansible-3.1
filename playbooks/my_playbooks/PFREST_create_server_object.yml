# Add these tasks at the end, before the handlers section

    - name: Get all host groups to find matching server
      uri:
        url: "https://{{ array_ip }}/ConfigurationManager/v1/objects/host-groups"
        method: GET
        headers:
          Accept: "application/json, text/plain, */*"
          Accept-Language: "en"
          Authorization: "Session {{ session_token }}"
          Content-Type: "application/json"
          X-Agent-Type: "SAE UI/{{ array_ip }}"
        validate_certs: "{{ validate_certs }}"
      register: all_host_groups_response

    - name: Find all host groups matching server nickname
      set_fact:
        matching_host_groups: "{{ matching_host_groups | default([]) + [item] }}"
      loop: "{{ all_host_groups_response.json.data }}"
      when: item.hostGroupName == server_nickname

    - name: Display found host group information
      debug:
        msg:
          - "Found {{ matching_host_groups | length }} matching host groups:"
          - "Host Group ID: {{ item.hostGroupId }}"
          - "Host Group Name: {{ item.hostGroupName }}"
          - "Port ID: {{ item.portId }}"
          - "Host Group Number: {{ item.hostGroupNumber }}"
      loop: "{{ matching_host_groups | default([]) }}"
      when: matching_host_groups is defined and matching_host_groups | length > 0

    - name: Prepare host group IDs list for resource group assignment
      set_fact:
        host_group_ids_list: "{{ matching_host_groups | map(attribute='hostGroupId') | list }}"
      when: matching_host_groups is defined and matching_host_groups | length > 0

    - name: Add all matching host groups to resource group
      uri:
        url: "https://{{ array_ip }}/ConfigurationManager/v1/objects/resource-groups/{{ target_resource_group_id }}/actions/add-resource/invoke"
        method: POST
        headers:
          Accept: "application/json, text/plain, */*"
          Accept-Language: "en"
          Authorization: "Session {{ session_token }}"
          Content-Type: "application/json"
          X-Agent-Type: "SAE UI/{{ array_ip }}"
        body_format: json
        body:
          parameters:
            hostGroupIds: "{{ host_group_ids_list }}"
        validate_certs: "{{ validate_certs }}"
        status_code: [200, 201, 202, 204]
      register: add_to_resource_group_response
      when: matching_host_groups is defined and matching_host_groups | length > 0

    - name: Wait for resource group assignment to complete
      uri:
        url: "https://{{ array_ip }}{{ add_to_resource_group_response.json.affectedResources[0] }}"
        method: GET
        headers:
          Accept: "application/json, text/plain, */*"
          Accept-Language: "en"
          Authorization: "Session {{ session_token }}"
          Content-Type: "application/json"
          X-Agent-Type: "SAE UI/{{ array_ip }}"
        validate_certs: "{{ validate_certs }}"
      register: resource_group_status
      until: resource_group_status.status == 200
      retries: "{{ (max_wait_time / check_interval) | int }}"
      delay: "{{ check_interval }}"
      when: matching_host_groups is defined and matching_host_groups | length > 0 and add_to_resource_group_response.json.affectedResources is defined

    - name: Display resource group assignment completion
      debug:
        msg:
          - "Successfully added {{ matching_host_groups | length }} host groups named '{{ server_nickname }}' to resource group {{ target_resource_group_id }}"
          - "Host Group IDs: {{ host_group_ids_list | join(', ') }}"
      when: matching_host_groups is defined and matching_host_groups | length > 0

    - name: Display warning if no matching host group found
      debug:
        msg:
          - "WARNING: No host group found with name '{{ server_nickname }}'"
          - "Please verify the server was created successfully and host groups exist"
      when: matching_host_groups is not defined or matching_host_groups | length == 0
