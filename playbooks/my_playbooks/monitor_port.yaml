---
- name: Gather Hitachi Array Port Performance Metrics
  hosts: localhost
  gather_facts: no
  vars:
    hitachi_username: "{{ vault_storage_username }}"
    hitachi_password: "{{ vault_storage_secret }}"
    hitachi_storage_ips:
      - 192.168.180.12
      - 192.168.181.12
      - 192.168.180.163     
    output_dir: "{{ playbook_dir }}/output"
    report_file: "{{ output_dir }}/hitachi_port_performance_report.json"
    
  tasks:
    - name: Create output directory
      file:
        path: "{{ output_dir }}"
        state: directory
      delegate_to: localhost
      
    - name: Gather Various array port capabilities
      block:
        - name: Gather Hitachi array port capabilities
          uri:
            url: "https://{{ item }}/ConfigurationManager/v1/objects/ports"
            method: GET
            user: "{{ vault_storage_username }}"
            password: "{{ vault_storage_secret }}"
            force_basic_auth: yes
            validate_certs: no
            headers:
              Accept: "application/json"
              Content-Type: "application/json"
          register: port_capabilities
          loop: "{{ hitachi_storage_ips }}"
          ignore_errors: yes
    #     no_log: yes

        - name: Print summary of port Capabilities
          debug:
            var: port_capabilities

        - name: Create session and get token
          uri:
            url: "https://{{ item }}/ConfigurationManager/v1/objects/sessions"
            method: POST
            user: "{{ vault_storage_username }}"
            password: "{{ vault_storage_secret }}"
            force_basic_auth: yes
            validate_certs: no
            headers:
              Accept: "application/json, text/plain, */*"
              Connection: "keep-alive"
              Content-Type: "application/json"
            body_format: json
            body:
              authenticationTimeout: 600
          register: session_response
          loop: "{{ hitachi_storage_ips }}"
          ignore_errors: yes

        - name: Display session token information
          debug:
            var: session_response

        - name: Get performance data for port-ios
          uri:
            url: "https://{{ item.item }}/ConfigurationManager/simple/v1/objects/performances/port-ios"
            method: GET
            validate_certs: no
            headers:
              Accept: "application/json, text/plain, */*"
              Accept-Language: "en"
              Connection: "keep-alive"
              Content-Type: "application/json"
              Authorization: "Session {{item.json.token}}"
              X-Auth-Token: "{{ item.json.token }}"
          register: performance_data
          loop: "{{ session_response.results }}"
          ignore_errors: yes
          when: item.json is defined and item.json.token is defined

        - name: Display performance data
          debug:
            var: performance_data

        - name: Close session
          uri:
            url: "https://{{ item.item }}/ConfigurationManager/v1/objects/sessions/{{ item.json.sessionId }}"
            method: DELETE
            validate_certs: no
            headers:
              Accept: "application/json, text/plain, */*"
              Content-Type: "application/json"
              Authorization: "Session {{item.json.token}}"
              X-Auth-Token: "{{ item.json.token }}"
          loop: "{{ session_response.results }}"
          ignore_errors: yes
          when: item.json is defined and item.json.sessionId is defined and item.json.token is defined

#        - name: Process storage ports statistics
#          set_fact:
#            processed_data: >-
#              {% set result = [] %}
#              {% for item in performance_data.results %}
#                {% set ip = item.url | regex_search('https://([^/]+)', '\1') %}
#                {% set port_count = 0 %}
#                {% set total_io_count = 0 %}
#                {% set total_input_io = 0 %}
#                {% set total_output_io = 0 %}
#                {% set total_transfer = 0 %}
#                {% set ports = [] %}
#
#                {% for port in item.json.data %}
#                  {% for io_info in port.ioInformation %}
#                    {% if io_info.type == "Target" %}
#                      {% set port_count = port_count + 1 %}
#                      {% set total_io_count = total_io_count + io_info.totalIoCount %}
#                      {% set total_input_io = total_input_io + io_info.inputIoCount %}
#                      {% set total_output_io = total_output_io + io_info.outputIoCount %}
#                      {% set total_transfer = total_transfer + io_info.totalTransferAmount %}
#                      {% set ports = ports + [port.portId] %}
#                    {% endif %}
#                  {% endfor %}
#                {% endfor %}
#
#                {% set device_info = {
#                  'ip': ip,
#                  'port_count': port_count,
#                  'total_io_count': total_io_count,
#                  'total_input_io': total_input_io,
#                  'total_output_io': total_output_io,
#                  'total_transfer': total_transfer,
#                  'ports': ports | join(', ')
#                } %}
#
#                {% set result = result + [device_info] %}
#              {% endfor %}
#              {{ result }}

        # Fixed approach - Use a simpler method to process the data
        - name: Process storage ports statistics
          set_fact:
            processed_data: "{{ processed_data | default([]) + [{ 
                  'ip': item.url | regex_replace('https://([^/]+)/.*', '\\1'),
                  'port_count': item.json.data | selectattr('ioInformation', 'defined') | map(attribute='ioInformation') | flatten | selectattr('type', 'equalto', 'Target') | list | length,
                  'total_io_count': item.json.data | selectattr('ioInformation', 'defined') | map(attribute='ioInformation') | flatten | selectattr('type', 'equalto', 'Target') | map(attribute='totalIoCount') | sum,
                  'total_input_io': item.json.data | selectattr('ioInformation', 'defined') | map(attribute='ioInformation') | flatten | selectattr('type', 'equalto', 'Target') | map(attribute='inputIoCount') | sum,
                  'total_output_io': item.json.data | selectattr('ioInformation', 'defined') | map(attribute='ioInformation') | flatten | selectattr('type', 'equalto', 'Target') | map(attribute='outputIoCount') | sum,
                  'total_transfer': item.json.data | selectattr('ioInformation', 'defined') | map(attribute='ioInformation') | flatten | selectattr('type', 'equalto', 'Target') | map(attribute='totalTransferAmount') | sum,
                  'ports': item.json.data | map(attribute='portId') | join(', ')
                }] }}"
          loop: "{{ performance_data.results }}"
          when:
            - item.json is defined
            - item.json.data is defined
            - item.status == 200

        - name: Print processed data
          debug:
            var: processed_data

        - name: Display statistics summary
          debug:
            msg:
              - "Storage Port Statistics Summary:"
              - "=================================================="
              - "{% for device in processed_data %}"
              - "Storage Device: {{ device.ip }}"
              - "  Number of Target Ports: {{ device.port_count }}"
              - "  Total IO Operations: {{ device.total_io_count | int }}"
              - "  Total Input IO: {{ device.total_input_io | int }}"
              - "  Total Output IO: {{ device.total_output_io | int }}"
              - "  Total Transfer Amount: {{ device.total_transfer | int }}"
              - "  Ports: {{ device.ports }}"
              - "=================================================="
              - "{% endfor %}"

        - name: Create summary report file
          copy:
            content: |
              # Storage Port Statistics Summary
              {% for device in processed_data %}
              ## Device: {{ device.ip }}
              - Number of Target Ports: {{ device.port_count }}
              - Total IO Operations: {{ device.total_io_count | int }}
              - Total Input IO: {{ device.total_input_io | int }} 
              - Total Output IO: {{ device.total_output_io | int }}
              - Total Transfer Amount: {{ device.total_transfer | int }}
              - Ports: {{ device.ports }}

              {% endfor %}
            dest: "./storage_port_statistics_summary.md"
          delegate_to: localhost
